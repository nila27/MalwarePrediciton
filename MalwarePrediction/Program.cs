using System;
using System.Windows.Forms;
using System.IO;
using System.Runtime.InteropServices;
using System.Threading;


namespace MalwarePrediction
{
    static class Program
    {
        public static string gPreDirectory = @"C:\MalwarePrediction\";
        public static string gDateNow = DateTime.Now.ToString("yyyy-MM-dd-hh-mm");
        public static string gLogDirectory = gPreDirectory + @"log\" + gDateNow + @"\";
        [DllImport("kernel32.dll", ExactSpelling = true)]
        private static extern IntPtr GetConsoleWindow();

        private static IntPtr MyConsole = GetConsoleWindow();

        [DllImport("user32.dll", EntryPoint = "SetWindowPos")]
        public static extern IntPtr SetWindowPos(IntPtr hWnd, int hWndInsertAfter, int x, int Y, int cx, int cy, int wFlags);


        public static void PrePath() // before excute main thread, make directory
        {

            DirectoryInfo DI = new DirectoryInfo(gLogDirectory);

            if (DI.Exists == false)
            {
                DI.Create();
            }
        }



        /// <summary>
        ///  The main entry point for the application.
        /// </summary>
        [STAThread]
        static void Main()
        {
            const int SWPNOSIZE = 0x0001;
            int w = Screen.PrimaryScreen.Bounds.Width;
            int h = Screen.PrimaryScreen.Bounds.Height;

            w = w * 9 / 20;
            h = h * 1 / 20;

            PrePath();

           
            // This is code to show extraction by cmd. be useless in practice
            SetWindowPos(MyConsole, 0, w, h, 0, 0, SWPNOSIZE);

            Application.EnableVisualStyles();
            Application.SetCompatibleTextRenderingDefault(false);
            Application.Run(new MainForm());
        }
    }
}
